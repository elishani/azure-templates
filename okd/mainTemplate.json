{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
    "vmName": {
        "type": "string",
        "defaultValue": "eli",
        "metadata": {
          "description": "Specifies a VM name."
          } 
      },
      "UserName": {
        "type": "string",
          "defaultValue": "Eli_Shani",
        "metadata": {
          "description": "User name NO SPACE IS ALLOWED instead space mark _."
        }
      },
      "UserPhoneNumber": {
        "type": "string",
          "defaultValue": "035798353",
        "metadata": {
          "description": "User phone number for connecting."
        }
      },
      "UserEmail": {
        "type": "string",
          "defaultValue": "elishani50@gmail.com",
        "metadata": {
          "description": "Email address for user."
        }
      },
    "adminUsername": {
      "type": "string",
      "defaultValue": "okdadmin",
      "metadata": {
        "description": "Username for the Virtual Machine."
            }  
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
            }
    },
    "VirtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_D3_v2",
      "allowedValues": [
        "Standard_A4_v2",
        "Standard_A8_v2",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D12_v2",
        "Standard_D13_v2"
      ],
      "metadata": {
        "description": "This is the headnode Azure Virtual Machine size, and will affect the cost. If you don't know, just leave the default value."
          }
        }
   },
    "functions": [],
    "variables": {
        "location": "[resourceGroup().location]", 
        "vmName": "[parameters('vmName')]",
        "imagePublisher": "OpenLogic",
        "imageOffer": "CentOS",
        "imageSKU": "7.5",
        "vmSize": "[parameters('virtualMachineSize')]",
        "publicIP1": "[concat(variables('vmName'), '-PublicIP')]",
        "nsgName": "[concat(variables('vmName'), '-NSG')]",
        "VirtualNetworkName": "[concat(variables('vmName'), '-VirtualNetwork')]",
        "interfaceName1": "[concat(variables('vmName'), '-NetworkInterface')]",
        "subNetName": "[concat(variables('VirtualNetworkName'), '-Subnet')]",
        "_artifactsLocation": "https://raw.githubusercontent.com/elishani/azure-templates/master/scripts/",
        "scriptName": "install-okd",
        "scriptNameSh": "[concat(variables('scriptName'), '.sh')]",
        "_artifactsLocationSasToken": "",
        "linuxConfiguration": {
          "disablePasswordAuthentication": true,
          "ssh": {
            "publicKeys": [
             {
              "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
              "keyData": "[parameters('adminPasswordOrKey')]"
            }
          ]
        }
    }       
    },
    "resources": [
        {   
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIP1')]",
            "apiVersion": "2019-11-01",
            "location": "[variables('location')]",
            "tags": {
                "displayName": "PublicIPAddress"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "name": "[variables('nsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2018-08-01",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "nsgRule1",
                        "properties": {
                            "description": "description",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRanges": ["22","8443","4001","7001","10250","10251"],
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('VirtualNetworkName')]", 
            "apiVersion": "2019-11-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ],
            "tags": {
                "displayName": "[variables('VirtualNetworkName')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subNetName')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('interfaceName1')]",
            "apiVersion": "2019-11-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP1'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('VirtualNetworkName'))]"
            ],
            "tags": {
                "displayName": "[variables('interfaceName1')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP1'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VirtualNetworkName'), variables('subNetName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName')]",
            "apiVersion": "2019-07-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('interfaceName1'))]"
            ],
            "tags": {
                "displayName": "[variables('vmName')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]",
                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
                },
                "storageProfile": {
                    "imageReference": {
                         "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSKU')]",
            "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('vmName'), '-OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('interfaceName1'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'), '/', variables('scriptName'))]",
            "apiVersion": "2020-06-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('vmName'))]"
            ],
            "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
            "fileUris": [
                "[uri(variables('_artifactsLocation'), concat(variables('scriptNameSh'), variables('_artifactsLocationSasToken')))]"
            ],
            "commandToExecute": "[concat('sh ',' ', variables('scriptNameSh'),' ',parameters('UserName'),' ',parameters('UserPhoneNumber'),' ',parameters('UserEmail'),' ',parameters('adminUsername'),' ',reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIP1'))).IpAddress)]"
            }
        }
        }
],
    "outputs": {}
}
