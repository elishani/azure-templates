{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
    // mysql
        "administratorLogin": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Database administrator login name"
            }
        },
        "administratorLoginPassword": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "Database administrator password"
            }
        },
        "skuCapacity": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "Azure database for MySQL compute capacity in vCores (2,4,8,16,32)"
            }
        },
        "skuName": {
            "type": "string",
            "defaultValue": "GP_Gen5_2",
            "metadata": {
                "description": "Azure database for MySQL sku name "
            }
        },
        "SkuSizeMB": {
            "type": "int",
            "defaultValue": 5120,
            "metadata": {
                "description": "Azure database for MySQL Sku Size "
            }
        },
        "SkuTier": {
            "type": "string",
            "defaultValue": "GeneralPurpose",
            "metadata": {
                "description": "Azure database for MySQL pricing tier"
            }
        },
        "skuFamily": {
            "type": "string",
            "defaultValue": "Gen5",
            "metadata": {
                "description": "Azure database for MySQL sku family"
            }
        },
        "mysqlVersion": {
            "type": "string",
            "allowedValues": [
                "5.6",
                "5.7"
            ],
            "defaultValue": "5.7",
            "metadata": {
                "description": "MySQL version"
            }
        },
        "backupRetentionDays": {
            "type": "int",
            "defaultValue": 7,
            "metadata": {
                "description": "MySQL Server backup retention days"
            }
        },
        "geoRedundantBackup": {
            "type": "string",
            "defaultValue": "Disabled",
            "metadata": {
                "description": "Geo-Redundant Backup setting"
            }
        },
        "storageSufix": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Sufix to storageAccount."
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "vm",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
            }
        }
    },
 
 
    "functions": [],
    "variables": {
        "location": "[resourceGroup().location]", 
        "vmName1": "rancher",
        "ubuntuOS": "18.04-LTS",
        "serverName": "ranchermysql",
        "virtualNetworkRuleName": "AllowSubnet",
        "publicIP1": "[concat(variables('vmName1'), '-PublicIP')]",
        "storageName": "[toLower( concat('staccount', parameters('storageSufix')))]",
        "nsgName": "ubuntuVM-nsg",
        "VirtualNetworkName": "ubuntuVM-VirtualNetwork",
        "interfaceName1": "[concat(variables('vmName1'), '-NetworkInterface')]",
        "subNetName": "[concat(variables('VirtualNetworkName'), '-Subnet')]",
        "_artifactsLocation": "https://raw.githubusercontent.com/elishani/azure-templates/master/scripts/",
        "scriptName": "install-one-rancher",
        "scriptNameSh": "[concat(variables('scriptName'), '.sh')]",
        "_artifactsLocationSasToken": "",
        "linuxConfiguration": {
          "disablePasswordAuthentication": true,
          "ssh": {
            "publicKeys": [
             {
              "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
              "keyData": "[parameters('adminPasswordOrKey')]"
            }
          ]
        }
    }, 
    "firewallrules": {
            "batch": {
                "rules": [
                    {
                        "Name": "rule1",
                        "StartIpAddress": "0.0.0.0",
                        "EndIpAddress": "255.255.255.255"
                    },
                    {
                        "Name": "rule2",
                        "StartIpAddress": "0.0.0.0",
                        "EndIpAddress": "255.255.255.255"
                    }
                ]
            }
        }      
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageName')]",
            "apiVersion": "2019-06-01",
            "location": "[variables('location')]",
            "tags": {
                "displayName": "[concat(variables('vmName1'),' Storage Account')]"
            },
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage"
        },
        {   
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIP1')]",
            "apiVersion": "2019-11-01",
            "location": "[variables('location')]",
            "tags": {
                "displayName": "PublicIPAddress"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "name": "[variables('nsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2018-08-01",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "nsgRule1",
                        "properties": {
                            "description": "description",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRanges": ["22", "80", "443"],
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('VirtualNetworkName')]", 
            "apiVersion": "2019-11-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ],
            "tags": {
                "displayName": "[variables('VirtualNetworkName')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subNetName')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('interfaceName1')]",
            "apiVersion": "2019-11-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP1'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('VirtualNetworkName'))]"
            ],
            "tags": {
                "displayName": "[variables('interfaceName1')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP1'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VirtualNetworkName'), variables('subNetName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName1')]",
            "apiVersion": "2019-07-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('interfaceName1'))]"
            ],
            "tags": {
                "displayName": "[variables('vmName1')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_A2_v2"
                },
                "osProfile": {
                    "computerName": "[variables('vmName1')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]",
                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "[variables('ubuntuOS')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('vmName1'), '-OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('interfaceName1'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageName'))).primaryEndpoints.blob]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName1'), '/', variables('scriptName'))]",
            "apiVersion": "2020-06-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('vmName1'))]"
            ],
            "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
            "fileUris": [
                "[uri(variables('_artifactsLocation'), concat(variables('scriptNameSh'), variables('_artifactsLocationSasToken')))]"
            ],
            "commandToExecute": "[concat('sh ', variables('scriptNameSh'))]"
            }
        }
    },
    {
            "apiVersion": "2017-12-01",
            "type": "Microsoft.DBforMySQL/servers",
            "location": "[variables('location')]",
            "name": "[variables('serverName')]",
            "sku": {
                "name": "[parameters('skuName')]",
                "tier": "[parameters('skuTier')]",
                "capacity": "[parameters('skuCapacity')]",
                "size": "[parameters('skuSizeMB')]",
                "family": "[parameters('skuFamily')]"
            },
            "properties": {
                "createMode": "Default",
                "version": "[parameters('mysqlVersion')]",
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "storageProfile": {
                    "storageMB": "[parameters('skuSizeMB')]",
                    "backupRetentionDays": "[parameters('backupRetentionDays')]",
                    "geoRedundantBackup": "[parameters('geoRedundantBackup')]"
                }
            },
            "resources": [
                {
                    "name": "[variables('virtualNetworkRuleName')]",
                    "type": "virtualNetworkRules",
                    "apiVersion": "2017-12-01",
                    "properties": {
                        "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
                        "ignoreMissingVnetServiceEndpoint": true
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.DBforMySQL/servers/', variables('serverName'))]"
                    ]
                }
            ]
        },
        {
            "name": "[concat(variables('serverName'),'/',variables('firewallrules').batch.rules[copyIndex()].Name)]",
            "type": "Microsoft.DBforMySQL/servers/firewallRules",
            "apiVersion": "2017-12-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/servers/', variables('serverName'))]"
            ],
            "copy": {
                "name": "firewallRulesCopy",
                "mode": "Serial",
                "batchSize": 1,
                "count": "[length(variables('firewallrules').batch.rules)]"
            },
            "properties": {
                "StartIpAddress": "[variables('firewallrules').batch.rules[copyIndex()].StartIpAddress]",
                "EndIpAddress": "[variables('firewallrules').batch.rules[copyIndex()].EndIpAddress]"
            }
        }
        
],
    "outputs": {}
}
